{{ $thisCmd := 2 }}
{{ $extractCmd := 4 }}

{{ $queueChannel := 672866868951908392 }}

{{/* first get the embed pieces by calling embedExtract*/}}
{{ if not .ExecData }}
{{ $channel := $queueChannel }}
{{ $id := (index .CmdArgs 0) }}
{{ $answer := (joinStr " " (slice .CmdArgs 1)) }}

{{/* if channel is specified, use it */}}
{{ if reFind "\\<#\\d+\\>" (index .CmdArgs 0) }}
{{ $channel = (reFind "\\d+" (index .CmdArgs 0)) }}
{{ $id := (index .CmdArgs 1) }}
{{ $answer := (joinStr " " (slice .CmdArgs 2)) }}
{{ end }}

{{ execCC $extractCmd nil 0 (sdict "channel" $channel "id" $id "caller" $thisCmd "args" $answer ) }}
{{ end }}

{{/* embedExtract calls back with the extracted pieces */}}
{{ if .ExecData }}
{{ $channel := .ExecData.channel }}
{{ $id := .ExecData.id }}
{{ $extract := .ExecData.extract }}
{{ $answer := .ExecData.args }}
{{ $color := 16776960 }}

{{/* pull info for answered by field */}}
{{ $answeredByName := "Answered By" }}
{{ $oldFields := $extract.fields }}
{{ $newFields := (cslice (sdict "name" $answeredByName "value" .User.Mention "inline" true)) }}

{{ range $index, $element := $oldFields }}
{{ if (ne (toString $element.Name) $answeredByName) }}
{{ $newFields = $newFields.Append (sdict "name" $element.Name "value" $element.Value "inline" $element.Inline) }}
{{ end }}
{{ end }}

{{/* add answer */}}
{{ editMessage $channel $id (cembed "title" $extract.title "description" $answer "color" $color "footer" $extract.footer "fields" $newFields) }}
{{ deleteAllMessageReactions $channel $id }}
{{ sendMessage nil (joinStr "" "Answer added! https://discordapp.com/channels/" .Guild.ID "/" $channel "/" $id)}}
{{ end }}
